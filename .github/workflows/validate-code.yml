name: CI Pipeline
on:
  push:
    branches:
      - "[0-9]+.[0-9]+.x"
      - main
  pull_request:

jobs:
  coding-standard:
    name: "Coding Standard"
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        php: [ "8.2" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@2.28.0
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: ds

      - name: Install dependencies
        run: composer update --no-progress --prefer-dist --optimize-autoloader

      - name: Check codestyle
        run: vendor/bin/phpcs -s

  static-analysis:
    name: "Static Analysis"
    runs-on: "${{ matrix.os }}"
    strategy:
      fail-fast: true
      matrix:
        php: [ "8.2" ]
        os: [ "ubuntu-latest" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@2.28.0
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: ds

      - name: Install dependencies
        run: composer update --no-progress --prefer-dist --optimize-autoloader

      - name: Analyze code with static-analysis
        run: vendor/bin/phpstan --no-progress

  unit-tests:
    name: "Unit Tests"
    runs-on: "${{ matrix.os }}"
    continue-on-error: "${{ matrix.experimental }}"
    strategy:
      fail-fast: false
      matrix:
        php: [ "8.2", "8.3" ]
        os: [ "ubuntu-latest" ]
        experimental: [ false ]
        include:
          - php: "8.2"
            composer-options: "--prefer-lowest"
            os: "ubuntu-latest"
            experimental: false
          - php: "8.3"
            composer-options: "--ignore-platform-req=php+"
            os: "ubuntu-latest"
            experimental: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@2.28.0
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: ds

      - name: Install dependencies
        run: composer update --no-progress --prefer-dist --optimize-autoloader ${{ matrix.composer-options }}

      - name: Execute tests
        run: vendor/bin/phpunit --colors=always --coverage-text

  composer-unused:
    name: "Composer Unused"
    runs-on: "${{ matrix.os }}"
    continue-on-error: "${{ matrix.experimental }}"
    strategy:
      fail-fast: false
      matrix:
        php: [ "8.2", "8.3" ]
        os: [ "ubuntu-latest" ]
        experimental: [ false ]
        include:
          - php: "8.3"
            composer-options: "--ignore-platform-req=php+"
            os: "ubuntu-latest"
            experimental: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@2.28.0
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          extensions: ds

      - name: Install dependencies
        run: composer update --prefer-dist --no-progress --no-suggest ${{ matrix.composer-options }}

      - name: Check unused dependencies
        run: bin/composer-unused --excludeDir=data

  # This is a "trick", a meta task which does not change, and we can use in
  # the protected branch rules as opposed to the tests one above which
  # may change regularly.
  validate-code:
    name: Code Requirement Check
    runs-on: ubuntu-latest
    needs:
      - coding-standard
      - static-analysis
      - unit-tests
      - composer-unused
    if: always()
    steps:
      - name: Successful run
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0

      - name: Failing run
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

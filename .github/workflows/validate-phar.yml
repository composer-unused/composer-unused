name: "Validate Phar"

on:
  workflow_dispatch:
  push:
    branches:
      - "[0-9]+.[0-9]+.x"
      - main
  pull_request:

env:
  COMPOSER_VERSION: "^2.1"
  PHP_EXTENSIONS: "mbstring, ds"
  PHP_INI_VALUES: "memory_limit=-1, phar.readonly=0"

jobs:
  build-phar:
    name: "Build Phar"

    runs-on: "blacksmith-4vcpu-ubuntu-2204"

    env:
      COMPOSER_UNUSED_PHAR: "build/composer-unused.phar"
      COMPOSER_UNUSED_PHAR_SIGNATURE: "build/composer-unused.phar.asc"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v5"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@2.35.4"
        with:
          coverage: "none"
          tools: "composer:v2"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          ini-values: "${{ env.PHP_INI_VALUES }}"
          php-version: "8.1"

      - name: "Install dependencies"
        run: "composer install --no-progress"

      - name: "Fetch latest version tag"
        run: "echo `git describe --abbrev=0 --tags` > .version"

      - name: "Validate configuration for humbug/box"
        run: "vendor/bin/box validate box.json"

      - name: "Compile composer-unused.phar with humbug/box"
        run: "php -d error_reporting='E_ALL & ~E_DEPRECATED' vendor/bin/box compile --config=box.json --no-parallel"

      - name: "Show info about composer-unused.phar with humbug/box"
        if: success()
        continue-on-error: true
        run: "vendor/bin/box info ${{ env.COMPOSER_UNUSED_PHAR }}"

      - name: "Import GPG key"
        if: github.event.pull_request.head.repo.full_name == github.repository
        id: "import_gpg"
        uses: "crazy-max/ghaction-import-gpg@v6"
        with:
          gpg_private_key: "${{ secrets.GPG_PRIVATE_KEY }}"
          passphrase: "${{ secrets.GPG_PASSPHRASE }}"

      - name: "Sign composer-unused.phar"
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: "gpg --default-key ${{ steps.import_gpg.outputs.keyid }} --sign ${{ env.COMPOSER_UNUSED_PHAR }}"

      - name: "Detach signature"
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: "gpg --default-key ${{ steps.import_gpg.outputs.keyid }} --output ${{ env.COMPOSER_UNUSED_PHAR_SIGNATURE }} --detach-sig ${{ env.COMPOSER_UNUSED_PHAR }}"

      - name: "Verify signature"
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: "gpg --verify ${{ env.COMPOSER_UNUSED_PHAR_SIGNATURE }} ${{ env.COMPOSER_UNUSED_PHAR }}"

      - name: "Upload PHAR artifact"
        if: success()
        uses: "actions/upload-artifact@v4"
        with:
          name: "composer-unused-phar"
          path: "${{ env.COMPOSER_UNUSED_PHAR }}"
          retention-days: 1

  validate-phar:
    name: "Validate Phar (PHP ${{ matrix.php-version }})"
    needs: build-phar
    runs-on: "blacksmith-4vcpu-ubuntu-2204"

    strategy:
      matrix:
        php-version: [ "8.1", "8.2", "8.3", "8.4" ]

    env:
      COMPOSER_UNUSED_PHAR: "composer-unused.phar"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Install PHP with extensions"
        uses: "shivammathur/setup-php@2.34.1"
        with:
          coverage: "none"
          extensions: "${{ env.PHP_EXTENSIONS }}"
          php-version: "${{ matrix.php-version }}"

      - name: "Install dependencies"
        run: "composer install --no-progress"

      - name: "Download PHAR artifact"
        uses: "actions/download-artifact@v4"
        with:
          name: "composer-unused-phar"

      - name: "Validate composer-unused.phar against code"
        run: "php ${{ env.COMPOSER_UNUSED_PHAR }} --excludeDir=data"

  aggregate-validate-phar:
    name: Phar Requirement Check
    runs-on: blacksmith-4vcpu-ubuntu-2204
    needs: [ build-phar, validate-phar ]
    if: always()
    steps:
      - name: Check Overall Status
        run: |
          failed=0
          for job in $(jq -r 'keys_unsorted[]' <<< '${{ toJson(needs) }}'); do
            result=$(jq -r --arg job "$job" '.[$job].result' <<< '${{ toJson(needs) }}')
            echo "Job: $job - Status: $result"
            if [[ "$result" != "success" ]]; then
              failed=1
            fi
          done
          if [[ "$failed" -eq 0 ]]; then
            echo "✅ All jobs succeeded"
            exit 0
          else
            echo "❌ Some jobs failed"
            exit 1
          fi

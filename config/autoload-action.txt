<?php

// @generated by Humbug Box

$loader = (static function () {
    // Backup the autoloaded Composer files
    $existingComposerAutoloadFiles = $GLOBALS['__composer_autoload_files'] ?? [];

    // autoload.php @generated by Composer

    if (PHP_VERSION_ID < 50600) {
        if (!headers_sent()) {
            header('HTTP/1.1 500 Internal Server Error');
        }
        $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running '.PHP_VERSION.', please upgrade PHP or use Composer 2.2 LTS via "composer self-update --2.2". Aborting.'.PHP_EOL;
        if (!ini_get('display_errors')) {
            if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {
                fwrite(STDERR, $err);
            } elseif (!headers_sent()) {
                echo $err;
            }
        }
        trigger_error(
            $err,
            E_USER_ERROR
        );
    }

    require_once __DIR__ . '/composer/autoload_real.php';

    $loader = ComposerAutoloaderInit39782c8bfee4befd2242baf22e559d5c::getLoader();

    // Ensure InstalledVersions is available
    $installedVersionsPath = __DIR__.'/composer/InstalledVersions.php';
    if (file_exists($installedVersionsPath)) require_once $installedVersionsPath;

    // Restore the backup and ensure the excluded files are properly marked as loaded
    $GLOBALS['__composer_autoload_files'] = \array_merge(
        $existingComposerAutoloadFiles,
        \array_fill_keys([], true)
    );

    return $loader;
})();

// Class aliases. For more information see:
// https://github.com/humbug/php-scoper/blob/master/docs/further-reading.md#class-aliases
if (!function_exists('humbug_phpscoper_expose_class')) {
    function humbug_phpscoper_expose_class($exposed, $prefixed) {
        if (!class_exists($exposed, false) && !interface_exists($exposed, false) && !trait_exists($exposed, false)) {
            spl_autoload_call($prefixed);
        }
    }
}
humbug_phpscoper_expose_class('ComposerUnused\ComposerUnused\Configuration\PatternFilter', '__ComposerUnused__\ComposerUnused\ComposerUnused\Configuration\PatternFilter');
humbug_phpscoper_expose_class('ComposerUnused\ComposerUnused\Configuration\Configuration', '__ComposerUnused__\ComposerUnused\ComposerUnused\Configuration\Configuration');
humbug_phpscoper_expose_class('ComposerUnused\ComposerUnused\Configuration\FilterInterface', '__ComposerUnused__\ComposerUnused\ComposerUnused\Configuration\FilterInterface');
humbug_phpscoper_expose_class('ComposerUnused\ComposerUnused\Configuration\ConfigurationProvider', '__ComposerUnused__\ComposerUnused\ComposerUnused\Configuration\ConfigurationProvider');
humbug_phpscoper_expose_class('ComposerUnused\ComposerUnused\Configuration\AdditionalFilesAlreadySetException', '__ComposerUnused__\ComposerUnused\ComposerUnused\Configuration\AdditionalFilesAlreadySetException');
humbug_phpscoper_expose_class('ComposerUnused\ComposerUnused\Configuration\NamedFilter', '__ComposerUnused__\ComposerUnused\ComposerUnused\Configuration\NamedFilter');
humbug_phpscoper_expose_class('DateRangeError', '__ComposerUnused__\DateRangeError');
humbug_phpscoper_expose_class('DateInvalidTimeZoneException', '__ComposerUnused__\DateInvalidTimeZoneException');
humbug_phpscoper_expose_class('Override', '__ComposerUnused__\Override');
humbug_phpscoper_expose_class('DateObjectError', '__ComposerUnused__\DateObjectError');
humbug_phpscoper_expose_class('DateMalformedIntervalStringException', '__ComposerUnused__\DateMalformedIntervalStringException');
humbug_phpscoper_expose_class('DateMalformedPeriodStringException', '__ComposerUnused__\DateMalformedPeriodStringException');
humbug_phpscoper_expose_class('DateInvalidOperationException', '__ComposerUnused__\DateInvalidOperationException');
humbug_phpscoper_expose_class('DateMalformedStringException', '__ComposerUnused__\DateMalformedStringException');
humbug_phpscoper_expose_class('DateError', '__ComposerUnused__\DateError');
humbug_phpscoper_expose_class('DateException', '__ComposerUnused__\DateException');
humbug_phpscoper_expose_class('Stringable', '__ComposerUnused__\Stringable');
humbug_phpscoper_expose_class('PhpToken', '__ComposerUnused__\PhpToken');
humbug_phpscoper_expose_class('ValueError', '__ComposerUnused__\ValueError');
humbug_phpscoper_expose_class('UnhandledMatchError', '__ComposerUnused__\UnhandledMatchError');
humbug_phpscoper_expose_class('Attribute', '__ComposerUnused__\Attribute');
humbug_phpscoper_expose_class('Normalizer', '__ComposerUnused__\Normalizer');
humbug_phpscoper_expose_class('Webmozart\Glob\Glob', '__ComposerUnused__\Webmozart\Glob\Glob');

// Function aliases. For more information see:
// https://github.com/humbug/php-scoper/blob/master/docs/further-reading.md#function-aliases
if (!function_exists('ctype_alnum')) { function ctype_alnum() { return \__ComposerUnused__\ctype_alnum(...func_get_args()); } }
if (!function_exists('ctype_alpha')) { function ctype_alpha() { return \__ComposerUnused__\ctype_alpha(...func_get_args()); } }
if (!function_exists('ctype_cntrl')) { function ctype_cntrl() { return \__ComposerUnused__\ctype_cntrl(...func_get_args()); } }
if (!function_exists('ctype_digit')) { function ctype_digit() { return \__ComposerUnused__\ctype_digit(...func_get_args()); } }
if (!function_exists('ctype_graph')) { function ctype_graph() { return \__ComposerUnused__\ctype_graph(...func_get_args()); } }
if (!function_exists('ctype_lower')) { function ctype_lower() { return \__ComposerUnused__\ctype_lower(...func_get_args()); } }
if (!function_exists('ctype_print')) { function ctype_print() { return \__ComposerUnused__\ctype_print(...func_get_args()); } }
if (!function_exists('ctype_punct')) { function ctype_punct() { return \__ComposerUnused__\ctype_punct(...func_get_args()); } }
if (!function_exists('ctype_space')) { function ctype_space() { return \__ComposerUnused__\ctype_space(...func_get_args()); } }
if (!function_exists('ctype_upper')) { function ctype_upper() { return \__ComposerUnused__\ctype_upper(...func_get_args()); } }
if (!function_exists('ctype_xdigit')) { function ctype_xdigit() { return \__ComposerUnused__\ctype_xdigit(...func_get_args()); } }
if (!function_exists('expect')) { function expect() { return \__ComposerUnused__\expect(...func_get_args()); } }
if (!function_exists('fdiv')) { function fdiv() { return \__ComposerUnused__\fdiv(...func_get_args()); } }
if (!function_exists('formatErrorMessage')) { function formatErrorMessage() { return \__ComposerUnused__\formatErrorMessage(...func_get_args()); } }
if (!function_exists('getUrlFromPath')) { function getUrlFromPath() { return \__ComposerUnused__\getUrlFromPath(...func_get_args()); } }
if (!function_exists('get_debug_type')) { function get_debug_type() { return \__ComposerUnused__\get_debug_type(...func_get_args()); } }
if (!function_exists('get_resource_id')) { function get_resource_id() { return \__ComposerUnused__\get_resource_id(...func_get_args()); } }
if (!function_exists('grapheme_extract')) { function grapheme_extract() { return \__ComposerUnused__\grapheme_extract(...func_get_args()); } }
if (!function_exists('grapheme_stripos')) { function grapheme_stripos() { return \__ComposerUnused__\grapheme_stripos(...func_get_args()); } }
if (!function_exists('grapheme_stristr')) { function grapheme_stristr() { return \__ComposerUnused__\grapheme_stristr(...func_get_args()); } }
if (!function_exists('grapheme_strlen')) { function grapheme_strlen() { return \__ComposerUnused__\grapheme_strlen(...func_get_args()); } }
if (!function_exists('grapheme_strpos')) { function grapheme_strpos() { return \__ComposerUnused__\grapheme_strpos(...func_get_args()); } }
if (!function_exists('grapheme_strripos')) { function grapheme_strripos() { return \__ComposerUnused__\grapheme_strripos(...func_get_args()); } }
if (!function_exists('grapheme_strrpos')) { function grapheme_strrpos() { return \__ComposerUnused__\grapheme_strrpos(...func_get_args()); } }
if (!function_exists('grapheme_strstr')) { function grapheme_strstr() { return \__ComposerUnused__\grapheme_strstr(...func_get_args()); } }
if (!function_exists('grapheme_substr')) { function grapheme_substr() { return \__ComposerUnused__\grapheme_substr(...func_get_args()); } }
if (!function_exists('json_validate')) { function json_validate() { return \__ComposerUnused__\json_validate(...func_get_args()); } }
if (!function_exists('ldap_connect_wallet')) { function ldap_connect_wallet() { return \__ComposerUnused__\ldap_connect_wallet(...func_get_args()); } }
if (!function_exists('ldap_exop_sync')) { function ldap_exop_sync() { return \__ComposerUnused__\ldap_exop_sync(...func_get_args()); } }
if (!function_exists('mb_check_encoding')) { function mb_check_encoding() { return \__ComposerUnused__\mb_check_encoding(...func_get_args()); } }
if (!function_exists('mb_chr')) { function mb_chr() { return \__ComposerUnused__\mb_chr(...func_get_args()); } }
if (!function_exists('mb_convert_case')) { function mb_convert_case() { return \__ComposerUnused__\mb_convert_case(...func_get_args()); } }
if (!function_exists('mb_convert_encoding')) { function mb_convert_encoding() { return \__ComposerUnused__\mb_convert_encoding(...func_get_args()); } }
if (!function_exists('mb_convert_variables')) { function mb_convert_variables() { return \__ComposerUnused__\mb_convert_variables(...func_get_args()); } }
if (!function_exists('mb_decode_mimeheader')) { function mb_decode_mimeheader() { return \__ComposerUnused__\mb_decode_mimeheader(...func_get_args()); } }
if (!function_exists('mb_decode_numericentity')) { function mb_decode_numericentity() { return \__ComposerUnused__\mb_decode_numericentity(...func_get_args()); } }
if (!function_exists('mb_detect_encoding')) { function mb_detect_encoding() { return \__ComposerUnused__\mb_detect_encoding(...func_get_args()); } }
if (!function_exists('mb_detect_order')) { function mb_detect_order() { return \__ComposerUnused__\mb_detect_order(...func_get_args()); } }
if (!function_exists('mb_encode_mimeheader')) { function mb_encode_mimeheader() { return \__ComposerUnused__\mb_encode_mimeheader(...func_get_args()); } }
if (!function_exists('mb_encode_numericentity')) { function mb_encode_numericentity() { return \__ComposerUnused__\mb_encode_numericentity(...func_get_args()); } }
if (!function_exists('mb_encoding_aliases')) { function mb_encoding_aliases() { return \__ComposerUnused__\mb_encoding_aliases(...func_get_args()); } }
if (!function_exists('mb_get_info')) { function mb_get_info() { return \__ComposerUnused__\mb_get_info(...func_get_args()); } }
if (!function_exists('mb_http_input')) { function mb_http_input() { return \__ComposerUnused__\mb_http_input(...func_get_args()); } }
if (!function_exists('mb_http_output')) { function mb_http_output() { return \__ComposerUnused__\mb_http_output(...func_get_args()); } }
if (!function_exists('mb_internal_encoding')) { function mb_internal_encoding() { return \__ComposerUnused__\mb_internal_encoding(...func_get_args()); } }
if (!function_exists('mb_language')) { function mb_language() { return \__ComposerUnused__\mb_language(...func_get_args()); } }
if (!function_exists('mb_list_encodings')) { function mb_list_encodings() { return \__ComposerUnused__\mb_list_encodings(...func_get_args()); } }
if (!function_exists('mb_ord')) { function mb_ord() { return \__ComposerUnused__\mb_ord(...func_get_args()); } }
if (!function_exists('mb_output_handler')) { function mb_output_handler() { return \__ComposerUnused__\mb_output_handler(...func_get_args()); } }
if (!function_exists('mb_parse_str')) { function mb_parse_str() { return \__ComposerUnused__\mb_parse_str(...func_get_args()); } }
if (!function_exists('mb_scrub')) { function mb_scrub() { return \__ComposerUnused__\mb_scrub(...func_get_args()); } }
if (!function_exists('mb_str_pad')) { function mb_str_pad() { return \__ComposerUnused__\mb_str_pad(...func_get_args()); } }
if (!function_exists('mb_str_split')) { function mb_str_split() { return \__ComposerUnused__\mb_str_split(...func_get_args()); } }
if (!function_exists('mb_stripos')) { function mb_stripos() { return \__ComposerUnused__\mb_stripos(...func_get_args()); } }
if (!function_exists('mb_stristr')) { function mb_stristr() { return \__ComposerUnused__\mb_stristr(...func_get_args()); } }
if (!function_exists('mb_strlen')) { function mb_strlen() { return \__ComposerUnused__\mb_strlen(...func_get_args()); } }
if (!function_exists('mb_strpos')) { function mb_strpos() { return \__ComposerUnused__\mb_strpos(...func_get_args()); } }
if (!function_exists('mb_strrchr')) { function mb_strrchr() { return \__ComposerUnused__\mb_strrchr(...func_get_args()); } }
if (!function_exists('mb_strrichr')) { function mb_strrichr() { return \__ComposerUnused__\mb_strrichr(...func_get_args()); } }
if (!function_exists('mb_strripos')) { function mb_strripos() { return \__ComposerUnused__\mb_strripos(...func_get_args()); } }
if (!function_exists('mb_strrpos')) { function mb_strrpos() { return \__ComposerUnused__\mb_strrpos(...func_get_args()); } }
if (!function_exists('mb_strstr')) { function mb_strstr() { return \__ComposerUnused__\mb_strstr(...func_get_args()); } }
if (!function_exists('mb_strtolower')) { function mb_strtolower() { return \__ComposerUnused__\mb_strtolower(...func_get_args()); } }
if (!function_exists('mb_strtoupper')) { function mb_strtoupper() { return \__ComposerUnused__\mb_strtoupper(...func_get_args()); } }
if (!function_exists('mb_strwidth')) { function mb_strwidth() { return \__ComposerUnused__\mb_strwidth(...func_get_args()); } }
if (!function_exists('mb_substitute_character')) { function mb_substitute_character() { return \__ComposerUnused__\mb_substitute_character(...func_get_args()); } }
if (!function_exists('mb_substr')) { function mb_substr() { return \__ComposerUnused__\mb_substr(...func_get_args()); } }
if (!function_exists('mb_substr_count')) { function mb_substr_count() { return \__ComposerUnused__\mb_substr_count(...func_get_args()); } }
if (!function_exists('normalizer_is_normalized')) { function normalizer_is_normalized() { return \__ComposerUnused__\normalizer_is_normalized(...func_get_args()); } }
if (!function_exists('normalizer_normalize')) { function normalizer_normalize() { return \__ComposerUnused__\normalizer_normalize(...func_get_args()); } }
if (!function_exists('output')) { function output() { return \__ComposerUnused__\output(...func_get_args()); } }
if (!function_exists('parseArgs')) { function parseArgs() { return \__ComposerUnused__\parseArgs(...func_get_args()); } }
if (!function_exists('parseHeaderValue')) { function parseHeaderValue() { return \__ComposerUnused__\parseHeaderValue(...func_get_args()); } }
if (!function_exists('preg_last_error_msg')) { function preg_last_error_msg() { return \__ComposerUnused__\preg_last_error_msg(...func_get_args()); } }
if (!function_exists('showHelp')) { function showHelp() { return \__ComposerUnused__\showHelp(...func_get_args()); } }
if (!function_exists('showJsonError')) { function showJsonError() { return \__ComposerUnused__\showJsonError(...func_get_args()); } }
if (!function_exists('str_contains')) { function str_contains() { return \__ComposerUnused__\str_contains(...func_get_args()); } }
if (!function_exists('str_ends_with')) { function str_ends_with() { return \__ComposerUnused__\str_ends_with(...func_get_args()); } }
if (!function_exists('str_starts_with')) { function str_starts_with() { return \__ComposerUnused__\str_starts_with(...func_get_args()); } }
if (!function_exists('stream_context_set_options')) { function stream_context_set_options() { return \__ComposerUnused__\stream_context_set_options(...func_get_args()); } }
if (!function_exists('trigger_deprecation')) { function trigger_deprecation() { return \__ComposerUnused__\trigger_deprecation(...func_get_args()); } }
if (!function_exists('verify')) { function verify() { return \__ComposerUnused__\verify(...func_get_args()); } }
if (!function_exists('verify_that')) { function verify_that() { return \__ComposerUnused__\verify_that(...func_get_args()); } }

return $loader;
